{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91960\\\\Desktop\\\\React\\\\playWithText\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // rfc shortcut to create \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  // upper case\n  const handleUpclick = () => {\n    // console.log(\"uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  // lower case\n  const handleLoclick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  // clean text\n  const handleclean = () => {\n    let newText = \"\";\n    setText(newText);\n  };\n\n  // remove Extra white spaces in text\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n  };\n  // copy the text\n  const handlecopy = () => {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n  };\n  const handleOnchange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  // Text = \"hero\"  // wrong way to change the text\n  // setText(\"new Text\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnchange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpclick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLoclick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handlecopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleclean,\n        children: \"clean text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleExtraSpaces,\n        children: \"Remove white spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length - 1, \" words,\", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes read characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something in the textbox above to preview it here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpclick","newText","text","toUpperCase","setText","handleLoclick","toLowerCase","handleclean","handleExtraSpaces","split","join","handlecopy","document","getElementById","select","navigator","clipboard","writeText","value","handleOnchange","event","target","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/91960/Desktop/React/playWithText/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'   // rfc shortcut to create \r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    // upper case\r\n    const handleUpclick = () =>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    // lower case\r\n    const handleLoclick =()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    // clean text\r\n    const handleclean = () =>{\r\n        let newText = \"\"\r\n        setText(newText)\r\n    }\r\n\r\n    // remove Extra white spaces in text\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n    // copy the text\r\n    const handlecopy = ()=>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleOnchange = (event) =>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    // Text = \"hero\"  // wrong way to change the text\r\n    // setText(\"new Text\");\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor: props.mode ==='dark'?'grey':'white', color:props.mode ==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoclick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlecopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleclean}>clean text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove white spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <h2>Your Text summary</h2>\r\n        <p>{(text.split(\" \").length)-1} words,{text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read characters</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}